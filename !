#include "monty.h"





ssize_t read_textfile(const char *filename, size_t letters)
{
	int fd;
	ssize_t size;

	if (!filename || !letters)
	return (0);
	fd = open(filename, O_RDONLY);
	if (fd == -1)
		return (0);

	size = read(fd, &buffer[0], letters);
	if (size <= 0)
	{
	    fprintf(stderr, "Error reading file\n");
	    return -1;
  	}
	if (size == -1)
		return (0);
	close(fd);
	return (size);
}


void (*getFunction(char *choice))(stack_t **, unsigned int)
{
	int i = 0;
	instruction_t ops[] = {
			{"push", push},
			{"pall", pall},
			{NULL, NULL}
	};
	while (ops[i].opcode != NULL)
	{
		if (strcmp(choice, ops[i].opcode) == 0)
		{
			return ops[i].f;
		}
		i++;
	}
	return (NULL);
}


int checkifNum(char *value)
{
	if (value)
	{
		element = atoi(value ? value : NULL);
		if (element == 0)
		{
			printf("elemeent");
			exit(EXIT_FAILURE);
		}
	}
	return (0);
}


int is_available(char *action) {
	if (strcmp(action, "push") == 0 || strcmp(action, "pop") == 0 ||
	strcmp(action, "pall") == 0) {
		return (1);
	}
	return (-1);
}

void pall(stack_t **stack, unsigned int line_number)
{
	(void)line_number;

	while (*stack != NULL) {
		printf("%d\n", (*stack)->n);
		*stack = (*stack)->next;
	}
}
